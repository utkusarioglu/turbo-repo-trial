# Default values for webServer.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: utkusarioglu/web-server-nextjsgprc-projects-utkusarioglu-com
  pullPolicy: IfNotPresent

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations:
  prometheus.io/scrape: "true"
  prometheus.io/path: /metrics
  prometheus.io/port: "9464"

podSecurityContext:
  runAsUser: 10021
  runAsGroup: 10021
  fsGroup: 10021
  fsGroupChangePolicy: "OnRootMismatch" 

securityContext:
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  runAsNonRoot: true
  runAsUser: 10021

service:
  type: <TF_POPULATED>
  port: 3000

resources:
  {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector:
  {}

tolerations: []

affinity:
  {}

env:
  RUN_MODE: production

  PROJECT_ROOT_ABSPATH: /utkusarioglu-com/projects/nextjs-grpc
  REPO_RELPATH: frontend
  APP_RELPATH: apps/web
  # REPO_PROTOS_RELPATH: proto/src

  MS_HOST: ms.ms
  MS_PORT: 50051

  OTEL_TRACE_HOST: otel-trace-collector.observability
  OTEL_TRACE_PORT: 4317

  GRPC_VERBOSITY: INFO
  GRPC_TRACE: all
  GRPC_CLIENT_TLS_ENABLED: true

  # This should be in config
  CERTIFICATES_ABSPATH: /.certificates
  # CREDENTIALS_ABSPATH: /.certs # This isn't used 

  MS_GRPC_CLIENT_CERT_FOR_WEB_SERVER_RELPATH: ms-grpc-client-cert-for-web-server
  WEB_SERVER_SERVER_CERT_RELPATH: web-server-server-cert

  NEXT_PUBLIC_DOMAIN_NAME: <TF_POPULATED>
  SCHEME: <TF_POPULATED>

cloudProvider:
  isLocal: false
  isAws: false

certSecretNames:
  msGrpcClient: ms-grpc-client-cert-for-web-server
  webServerServerCert: web-server-server-cert

ingress:
  enabled: true

  annotations:
    nginx.ingress.kubernetes.io/enable-opentelemetry: "true"
    nginx.ingress.kubernetes.io/opentelemetry-trust-incoming-span: "true"
    # nginx.ingress.kubernetes.io/enable-opentracing: "true"
    # nginx.ingress.kubernetes.io/opentracing-trust-incoming-span: "true"
    kubernetes.io/tls-acme: "true"
    kubernetes.io/ingress.class: <TF_POPULATED>

    external-dns.alpha.kubernetes.io/alias: "true"
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP":80},{"HTTPS":443}]'
    alb.ingress.kubernetes.io/ssl-redirect: "443"

    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/group.name: nextjs-grpc
    alb.ingress.kubernetes.io/load-balancer-name: nextjs-grpc
    alb.ingress.kubernetes.io/security-groups: <TF_POPULATED>
    external-dns.alpha.kubernetes.io/hostname: <TF_POPULATED>

  hosts:
    - host: <TF_POPULATED>
      paths:
        - path: <TF_POPULATED>
          pathType: <TF_POPULATED>

            
  # tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local
