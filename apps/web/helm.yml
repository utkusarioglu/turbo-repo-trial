---
# Source: web-client/templates/pdb.helm
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: web-client
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: web-client
      app.kubernetes.io/instance: release-name
      app: release-name-web-client
---
# Source: web-client/templates/serviceaccount.helm
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-web-client
  labels:
    helm.sh/chart: web-client-0.1.104
    app.kubernetes.io/name: web-client
    app.kubernetes.io/instance: release-name
    app: release-name-web-client
    app.kubernetes.io/version: "experiment-feat-next-13-36"
    app.kubernetes.io/managed-by: Helm
---
# Source: web-client/templates/service.helm
apiVersion: v1
kind: Service
metadata:
  name: release-name-web-client
  labels:
    helm.sh/chart: web-client-0.1.104
    app.kubernetes.io/name: web-client
    app.kubernetes.io/instance: release-name
    app: release-name-web-client
    app.kubernetes.io/version: "experiment-feat-next-13-36"
    app.kubernetes.io/managed-by: Helm
  annotations:    
    service.beta.kubernetes.io/aws-load-balancer-type: nlb
    service.beta.kubernetes.io/aws-load-balancer-cross-zone-load-balancing-enabled: "true"
    # service.beta.kubernetes.io/aws-load-balancer-ssl-cert: 
spec:
  type: <TF_POPULATED>
  ports:
    - port: 3000
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: web-client
    app.kubernetes.io/instance: release-name
    app: release-name-web-client
---
# Source: web-client/templates/deployment.helm
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-web-client
  labels:
    helm.sh/chart: web-client-0.1.104
    app.kubernetes.io/name: web-client
    app.kubernetes.io/instance: release-name
    app: release-name-web-client
    app.kubernetes.io/version: "experiment-feat-next-13-36"
    app.kubernetes.io/managed-by: Helm
  #
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: web-client
      app.kubernetes.io/instance: release-name
      app: release-name-web-client
  template:
    metadata:
      annotations:
        prometheus.io/path: /metrics
        prometheus.io/port: "9464"
        prometheus.io/scrape: "true"
      labels:
        app.kubernetes.io/name: web-client
        app.kubernetes.io/instance: release-name
        app: release-name-web-client
    spec:
      serviceAccountName: release-name-web-client
      securityContext:
        fsGroup: 10021
        fsGroupChangePolicy: OnRootMismatch
        runAsGroup: 10021
        runAsUser: 10021
      containers:
        - name: web-client
          securityContext:
            runAsNonRoot: true
            runAsUser: 10021
          image: "utkusarioglu/web-client-nextjsgprc-projects-utkusarioglu-com:experiment-feat-next-13-36"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 3000
              protocol: TCP
          # livenessProbe:
          #   httpGet:
          #     path: /
          #     port: http
          # readinessProbe:
          #   httpGet:
          #     path: /
          #     port: http
          resources:
            {}
          env:
            - name: "APP_RELPATH"
              value: "apps/web"
            - name: "CERTIFICATES_ABSPATH"
              value: "/.certificates"
            - name: "GRPC_CLIENT_TLS_ENABLED"
              value: "true"
            - name: "GRPC_TRACE"
              value: "all"
            - name: "GRPC_VERBOSITY"
              value: "INFO"
            - name: "MS_GRPC_CLIENT_CERT_FOR_WEB_CLIENT_RELPATH"
              value: "ms-grpc-client-cert-for-web-client"
            - name: "MS_HOST"
              value: "ms.ms"
            - name: "MS_PORT"
              value: "50051"
            - name: "NEXT_PUBLIC_DOMAIN_NAME"
              value: "<TF_POPULATED>"
            - name: "OTEL_TRACE_HOST"
              value: "otel-trace-collector.observability"
            - name: "OTEL_TRACE_PORT"
              value: "4317"
            - name: "PROJECT_ROOT_ABSPATH"
              value: "/utkusarioglu-com/projects/nextjs-grpc"
            - name: "REPO_RELPATH"
              value: "frontend-clients"
            - name: "RUN_MODE"
              value: "production"
            - name: "SCHEME"
              value: "<TF_POPULATED>"
            - name: "WEB_CLIENT_SERVER_CERT_RELPATH"
              value: "web-client-server-cert"
          volumeMounts:
            - name: ms-grpc-client-cert-for-web-client
              mountPath: "/.certificates/ms-grpc-client-cert-for-web-client"
              readOnly: true
            - name: web-client-server-cert
              mountPath: "/.certificates/web-client-server-cert"
              readOnly: true

      volumes:
        - name: "ms-grpc-client-cert-for-web-client"
          secret:
            secretName: "ms-grpc-client-cert-for-web-client"
        - name: "web-client-server-cert"
          secret:
            secretName: "web-client-server-cert"
---
# Source: web-client/templates/ingress.helm
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: release-name-web-client
  labels:
    helm.sh/chart: web-client-0.1.104
    app.kubernetes.io/name: web-client
    app.kubernetes.io/instance: release-name
    app: release-name-web-client
    app.kubernetes.io/version: "experiment-feat-next-13-36"
    app.kubernetes.io/managed-by: Helm
  annotations:
    alb.ingress.kubernetes.io/group.name: nextjs-grpc
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP":80},{"HTTPS":443}]'
    alb.ingress.kubernetes.io/load-balancer-name: nextjs-grpc
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/security-groups: <TF_POPULATED>
    alb.ingress.kubernetes.io/ssl-redirect: "443"
    alb.ingress.kubernetes.io/target-type: ip
    external-dns.alpha.kubernetes.io/alias: "true"
    external-dns.alpha.kubernetes.io/hostname: <TF_POPULATED>
    kubernetes.io/ingress.class: <TF_POPULATED>
    kubernetes.io/tls-acme: "true"
    nginx.ingress.kubernetes.io/enable-opentelemetry: "true"
    nginx.ingress.kubernetes.io/opentelemetry-trust-incoming-span: "true"
spec:
  rules:
    - host: "<TF_POPULATED>"
      http:
        paths:
          - path: <TF_POPULATED>
            pathType: <TF_POPULATED>
            backend:
              service:
                name: release-name-web-client
                port:
                  number: 3000
---
# Source: web-client/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "release-name-web-client-test-connection"
  labels:
    helm.sh/chart: web-client-0.1.104
    app.kubernetes.io/name: web-client
    app.kubernetes.io/instance: release-name
    app: release-name-web-client
    app.kubernetes.io/version: "experiment-feat-next-13-36"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['release-name-web-client:3000']
  restartPolicy: Never
